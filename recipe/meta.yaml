{% set version = "10.0.0" %}

package:
  name: av
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/a/av/av-{{ version }}.tar.gz
  sha256: 8afd3d5610e1086f3b2d8389d66672ea78624516912c93612de64dcaa4c67e05
  patches:
    - patches/lgpl_tests.patch
    # https://github.com/PyAV-Org/PyAV/pull/1062
    - patches/1062-populate-stream-from-codec-context.patch
    # https://github.com/PyAV-Org/PyAV/pull/1067
    - patches/1067-add-flag-encoder-flush.patch
    # https://github.com/PyAV-Org/PyAV/pull/1110
    - patches/1110-ffmpeg6.patch  # [ffmpeg==6]

build:
  number: 4
  script:
    - {{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv
    # 2022/02/06: hmaarrfk
    # Tests don't seem to be passing on azure with ppc64le
    - python setup.py test                   # [(build_platform == target_platform) and (not ppc64le)]
  run_exports:
    # PyAV now claims to follow semantic versioning
    - {{ pin_subpackage('av') }}

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - cython <3                              # [build_platform != target_platform]
    - numpy                                  # [build_platform != target_platform]
    - {{ compiler('c') }}
    - pkg-config  # [not win]
  host:
    - python
    - pip
    - cython <3
    - numpy
    - ffmpeg  {{ ffmpeg }}=lgpl*
    - pillow
  run:
    - python
    - {{ pin_compatible('numpy') }}
    - pillow

test:
  requires:
    # The compiled pyav should be compatibile with both the GPL version of
    # ffpmpeg and the lgpl version of ffmpeg
    - ffmpeg *=gpl*    # [py==39]
    - ffmpeg *=lgpl*   # [py==310]
  commands:
    # With the GPL version, x264 and x265 should be available
    - python -c "import av; assert 'libx264' in av.codecs_available"       # [py==39]
    - python -c "import av; assert 'libx265' in av.codecs_available"       # [py==39]
    # But they won't be available if the user chooses the lgpl version
    - python -c "import av; assert 'libx264' not in av.codecs_available"   # [py==310]
    - python -c "import av; assert 'libx265' not in av.codecs_available"   # [py==310]
    # openh264 should always be available from conda-forge
    - python -c "import av; assert 'libopenh264' in av.codecs_available"
  imports:
    - av
    - av.audio
    - av.audio.fifo

about:
  home: https://github.com/PyAV-Org/PyAV/
  license: BSD-3-Clause
  license_file: LICENSE.txt
  summary: Pythonic bindings for FFmpeg.

  description: |
    PyAV is a Pythonic binding for FFmpeg or Libav. We aim to provide all of
    the power and control of the underlying library, but manage the gritty
    details as much as possible.
  doc_url: https://pyav.org/docs/develop/
  dev_url: https://github.com/PyAV-Org/PyAV/

extra:
  recipe-maintainers:
    - danielballan
    - mikeboers
    - sdvillal
    - h-vetinari
    - hmaarrfk
